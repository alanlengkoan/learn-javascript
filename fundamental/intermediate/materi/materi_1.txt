1.  Berikut beberapa tipe server sesuai dengan layanan yang baik untuk Anda ketahui.
    - File Server : melayani penyimpanan dan pendistribusian berkas.
    - Application Server : melayani hosting sebuah program atau aplikasi.
    - DNS Server : mengubah nama domain (contoh: dicoding.com) ke dalam bentuk IP Address (contoh: 75.2.21.170).
    - Web Server : melayani hosting sebuah program atau aplikasi (seperti Application Server) yang dapat diakses oleh client melalui internet maupun intranet.
    - Database Server : melayani penyimpanan dan pendistribusian data terstruktur.
2.  Web Server : Server yang dapat menjalankan program dan dapat diakses melalui internet atau intranet. 
3.  Web Service : Program yang dijalankan di web server agar kebutuhan bisnis terpenuhi.
4.  Informasi pada request dapat mengandung :
    - Request line : berisikan method/verb seperti GET (mengambil data), POST (menambahkan/mengirim data), PUT (memperbaharui data), atau DELETE (menghapus data); path atau alamat yang diminta; dan versi HTTP yang digunakan.
    - Header : memuat informasi yang dilampirkan terkait request seperti format dokumen (contoh application/json, text/html, dsb), kunci akses, dsb.
    - Body (opsional) : mengandung data yang dibutuhkan oleh server, bisa dalam bentuk teks, JSON, dll. Body tidak wajib dilampirkan bila server tidak membutuhkan data apapun.
5.  Berikut beberapa informasi yang dilampirkan oleh respons :
    - Status line : berisikan HTTP versi yang digunakan; status code berupa tiga digit angka yang menandakan keberhasilan dari permintaan; reason phrase atau status text yang merupakan pesan berdasarkan status code dalam bentuk teks sehingga lebih mudah dimengerti.
    - Header : mengandung informasi yang dilampirkan terkait response seperti format dokumen.
    - Body (opsional, namun biasanya selalu dilampirkan) : memuat data yang dikirimkan oleh server. Data dapat berupa HTML, JSON, gambar, dsb.
6.  REST atau REpresentational State Transfer adalah salah satu gaya arsitektur yang dapat diadaptasi ketika membangun web service.
7.  API atau Application Program Interface merupakan antarmuka yang menjadi perantara antara sistem aplikasi yang berbeda. API tak hanya dalam bentuk Web Service, bisa saja berupa SDK (Software Development Kit) ataupun lainnya.
8.  RESTful API adalah API yang memanfaatkan REST untuk membangun web service. HTTP method yang digunakan adalah GET, POST, PUT, dan DELETE.
9.  Berikut beberapa sifat yang menjadi kunci pada REST API :
    - Client-server : REST API memisahkan antara client dan server. Client dapat berupa aplikasi web, mobile, atau lainnya.
    - Stateless : REST API tidak menyimpan state dari client. Setiap request yang dikirimkan oleh client harus berisi semua informasi yang dibutuhkan oleh server.
    - Cacheable : REST API memungkinkan server untuk memberikan respon yang dapat disimpan di cache.
    - Layered system : REST API memungkinkan server untuk berinteraksi dengan server lain.
10. Singkatnya, ketika membangun REST API kita harus memperhatikan empat poin berikut:
    - Format request dan response => Biasanya menggunakan JSON.
    - HTTP Verbs/Methods => GET, POST, PUT, dan DELETE.
    - HTTP Response code => 200, 201, 400, 401, 404, 500, dsb.
    - URL Design => /api/v1/contacts, /api/v1/contacts/1, dsb.

curl -X GET https://coffee-api.dicoding.dev/coffees -i
curl -X POST -H "Content-Type: application/json" -d "{\"name\": \"Kopi Tubruk\"}" https://coffee-api.dicoding.dev/transactions -i
curl -X POST -H "Content-Type: application/json" -d "{\"name\": \"Kopi Luwak\"}" https://coffee-api.dicoding.dev/transactions -i